@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{ 
    var home = Model.Content.AncestorOrSelf(1);
}

@if (home.Children.Where("Visible").Any())
{
    @* For each child page under the home node, where the property umbracoNaviHide is not True *@
    foreach (var childPage in home.Children.Where(c => !c.GetPropertyValue<bool>("umbracoNaviHide")))
    {   
        <div class="col-xs-6 col-sm-3">
            @if (childPage.Children.Where(c => !c.GetPropertyValue<bool>("umbracoNaviHide")).Any())
            {                    
                <strong>@childPage.Name</strong>
                @childPages(childPage.Children)
            }
        </div>
    }
}

<div class="col-xs-6 col-sm-3">
    <strong>Find us</strong>
    <ul>
        <li>
            <a href="https://twitter.com/umbracoproject" target="_blank">Twitter</a>
        </li>
        <li>
            <a href="https://www.facebook.com/Umbraco" target="_blank">Facebook</a>
        </li>
        <li>
            <a href="http://umbraco.com/?utm_source=core&utm_medium=starterkit&utm_content=topic-link&utm_campaign=fanoe" target="_blank">Umbraco.com</a>
        </li>
    </ul>
</div>

@helper childPages(IEnumerable<IPublishedContent> pages)
{
    @* Ensure that we have a collection of pages *@
    if (pages.Any())
    {
        <ul>
            @foreach (var page in pages.Where(c => !c.GetPropertyValue<bool>("umbracoNaviHide")))
            {
                <li>
                    <a href="@page.Url">@page.Name</a>
                </li>
            }
        </ul>
    }
}